From 9165102f082775f29be69c0956ae6eccb636e18b Mon Sep 17 00:00:00 2001
From: Vasanthakumar Thiagarajan <vasanth@atheros.com>
Date: Thu, 20 May 2010 14:34:46 -0700
Subject: [PATCH 15/20] ath9k: Clean up few function parameters in recv.c

ath9k_rx_skb_preprocess() needs only ieee80211 frame header,
pass only frame headers instead of skb to that function. Also
remove ineffective frame dump in ath9k_process_rate().

Signed-off-by: Vasanthakumar Thiagarajan <vasanth@atheros.com>
---
 drivers/net/wireless/ath/ath9k/recv.c |   23 ++++++++---------------
 1 files changed, 8 insertions(+), 15 deletions(-)

--- a/drivers/net/wireless/ath/ath9k/recv.c
+++ b/drivers/net/wireless/ath/ath9k/recv.c
@@ -826,16 +826,14 @@ static struct ath_buf *ath_get_next_rx_b
 
 /* Assumes you've already done the endian to CPU conversion */
 static bool ath9k_rx_accept(struct ath_common *common,
-			    struct sk_buff *skb,
+			    struct ieee80211_hdr *hdr,
 			    struct ieee80211_rx_status *rxs,
 			    struct ath_rx_status *rx_stats,
 			    bool *decrypt_error)
 {
 	struct ath_hw *ah = common->ah;
-	struct ieee80211_hdr *hdr;
 	__le16 fc;
 
-	hdr = (struct ieee80211_hdr *) skb->data;
 	fc = hdr->frame_control;
 
 	if (!rx_stats->rs_datalen)
@@ -906,8 +904,7 @@ static bool ath9k_rx_accept(struct ath_c
 static int ath9k_process_rate(struct ath_common *common,
 			      struct ieee80211_hw *hw,
 			      struct ath_rx_status *rx_stats,
-			      struct ieee80211_rx_status *rxs,
-			      struct sk_buff *skb)
+			      struct ieee80211_rx_status *rxs)
 {
 	struct ieee80211_supported_band *sband;
 	enum ieee80211_band band;
@@ -945,25 +942,21 @@ static int ath9k_process_rate(struct ath
 	 */
 	ath_print(common, ATH_DBG_XMIT, "unsupported hw bitrate detected "
 		  "0x%02x using 1 Mbit\n", rx_stats->rs_rate);
-	if ((common->debug_mask & ATH_DBG_XMIT))
-		print_hex_dump_bytes("", DUMP_PREFIX_NONE, skb->data, skb->len);
 
 	return -EINVAL;
 }
 
 static void ath9k_process_rssi(struct ath_common *common,
 			       struct ieee80211_hw *hw,
-			       struct sk_buff *skb,
+			       struct ieee80211_hdr *hdr,
 			       struct ath_rx_status *rx_stats)
 {
 	struct ath_hw *ah = common->ah;
 	struct ieee80211_sta *sta;
-	struct ieee80211_hdr *hdr;
 	struct ath_node *an;
 	int last_rssi = ATH_RSSI_DUMMY_MARKER;
 	__le16 fc;
 
-	hdr = (struct ieee80211_hdr *)skb->data;
 	fc = hdr->frame_control;
 
 	rcu_read_lock();
@@ -1002,7 +995,7 @@ static void ath9k_process_rssi(struct at
  */
 static int ath9k_rx_skb_preprocess(struct ath_common *common,
 				   struct ieee80211_hw *hw,
-				   struct sk_buff *skb,
+				   struct ieee80211_hdr *hdr,
 				   struct ath_rx_status *rx_stats,
 				   struct ieee80211_rx_status *rx_status,
 				   bool *decrypt_error)
@@ -1015,12 +1008,12 @@ static int ath9k_rx_skb_preprocess(struc
 	 * everything but the rate is checked here, the rate check is done
 	 * separately to avoid doing two lookups for a rate for each frame.
 	 */
-	if (!ath9k_rx_accept(common, skb, rx_status, rx_stats, decrypt_error))
+	if (!ath9k_rx_accept(common, hdr, rx_status, rx_stats, decrypt_error))
 		return -EINVAL;
 
-	ath9k_process_rssi(common, hw, skb, rx_stats);
+	ath9k_process_rssi(common, hw, hdr, rx_stats);
 
-	if (ath9k_process_rate(common, hw, rx_stats, rx_status, skb))
+	if (ath9k_process_rate(common, hw, rx_stats, rx_status))
 		return -EINVAL;
 
 	rx_status->mactime = ath9k_hw_extend_tsf(ah, rx_stats->rs_tstamp);
@@ -1145,7 +1138,7 @@ int ath_rx_tasklet(struct ath_softc *sc,
 		if (flush)
 			goto requeue;
 
-		retval = ath9k_rx_skb_preprocess(common, hw, skb, &rs,
+		retval = ath9k_rx_skb_preprocess(common, hw, hdr, &rs,
 						 rxs, &decrypt_error);
 		if (retval)
 			goto requeue;
